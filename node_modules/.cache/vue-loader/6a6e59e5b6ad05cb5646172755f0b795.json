{"remainingRequest":"/Users/morgansuh/med-schedules/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/morgansuh/med-schedules/src/views/Register.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/morgansuh/med-schedules/src/views/Register.vue","mtime":1650402838910},{"path":"/Users/morgansuh/med-schedules/node_modules/cache-loader/dist/cjs.js","mtime":1650339646262},{"path":"/Users/morgansuh/med-schedules/node_modules/babel-loader/lib/index.js","mtime":1650339646916},{"path":"/Users/morgansuh/med-schedules/node_modules/cache-loader/dist/cjs.js","mtime":1650339646262},{"path":"/Users/morgansuh/med-schedules/node_modules/vue-loader-v16/dist/index.js","mtime":1650339642675}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHJlZiB9IGZyb20gInZ1ZSI7CmltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAiLi4vc3VwYWJhc2UvaW5pdCI7CmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gInZ1ZS1yb3V0ZXIiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJyZWdpc3RlciIsCiAgc2V0dXAoKSB7CiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTsKICAgIGNvbnN0IGNvbmZpcm1QYXNzd29yZCA9IHJlZihudWxsKTsKICAgIGNvbnN0IGVtYWlsID0gcmVmKG51bGwpOwogICAgY29uc3QgcGFzc3dvcmQgPSByZWYobnVsbCk7CiAgICBjb25zdCBlcnJvck1zZyA9IHJlZihudWxsKTsKCiAgICAvLyBSZWdpc3RlciBmdW5jdGlvbgogICAgY29uc3QgcmVnaXN0ZXIgPSBhc3luYyAoKSA9PiB7CiAgICAgIGlmIChwYXNzd29yZC52YWx1ZSA9PT0gY29uZmlybVBhc3N3b3JkLnZhbHVlKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnblVwKHsKICAgICAgICAgICAgZW1haWw6IGVtYWlsLnZhbHVlLAogICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQudmFsdWUsCiAgICAgICAgICB9KTsKICAgICAgICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7CiAgICAgICAgICByb3V0ZXIucHVzaCh7IG5hbWU6ICJMb2dpbiIgfSk7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIGVycm9yTXNnLnZhbHVlID0gZXJyb3IubWVzc2FnZTsKICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICBlcnJvck1zZy52YWx1ZSA9IG51bGw7CiAgICAgICAgICB9LCA1MDAwKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGVycm9yTXNnLnZhbHVlID0gIkVycm9yOiBQYXNzd29yZHMgZG8gbm90IG1hdGNoIjsKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgZXJyb3JNc2cudmFsdWUgPSBudWxsOwogICAgICB9LCA1MDAwKTsKICAgIH07CiAgICByZXR1cm4geyBlbWFpbCwgcGFzc3dvcmQsIGNvbmZpcm1QYXNzd29yZCwgZXJyb3JNc2csIHJlZ2lzdGVyIH07CiAgfSwKfTsK"},{"version":3,"sources":["/Users/morgansuh/med-schedules/src/views/Register.vue"],"names":[],"mappings":"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","file":"/Users/morgansuh/med-schedules/src/views/Register.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"max-w-screen-sm mx-auto px-4 py-10\">\n    <!-- For Errors -->\n    <div v-if=\"errorMsg\" class=\"mb-10 p-4 rounded-md bg-light-grey shadow-lg\">\n      <p class=\"text-red-500\">{{ errorMsg }}</p>\n    </div>\n    <!-- Register Form-->\n    <form\n      @submit.prevent=\"register\"\n      class=\"p-8 flex flex-col bg-light-grey rounded-md shadow-lg\"\n    >\n      <h1 class=\"text-3xl text-at-light-pink mb-4\">Register</h1>\n\n      <div class=\"flex flex-col mb-2\">\n        <label for=\"email\" class=\"mb-1 text-sm text-at-light-pink\">Email</label>\n        <input\n          type=\"text\"\n          required\n          class=\"p-2 text-gray-500 focus:outline-none\"\n          id=\"email\"\n          v-model=\"email\"\n        />\n      </div>\n\n      <div class=\"flex flex-col mb-2\">\n        <label for=\"password\" class=\"mb-1 text-sm text-at-light-pink\"\n          >Password</label\n        >\n        <input\n          type=\"password\"\n          required\n          class=\"p-2 text-gray-500 focus:outline-none\"\n          id=\"password\"\n          v-model=\"password\"\n        />\n      </div>\n\n      <div class=\"flex flex-col mb-2\">\n        <label for=\"confirmPassword\" class=\"mb-1 text-sm text-at-light-pink\"\n          >Confirm Password</label\n        >\n        <input\n          type=\"password\"\n          required\n          class=\"p-2 text-gray-500 focus:outline-none\"\n          id=\"confirmPassword\"\n          v-model=\"confirmPassword\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        class=\"\n          mt-6\n          py-2\n          px-6\n          rounded-sm\n          self-start\n          text-sm text-white\n          bg-at-light-pink\n          duration-200\n          border-solid border-2 border-transparent\n          hover:border-at-light-pink hover:bg-white hover:text-at-light-pink\n        \"\n      >\n        Register\n      </button>\n\n      <router-link class=\"text-sm mt-6 text-center\" :to=\"{ name: 'Login' }\">\n        Already have an account? <span class=\"text-at-light-pink\">Login</span>\n      </router-link>\n    </form>\n  </div>\n</template>\n \n<script>\nimport { ref } from \"vue\";\nimport { supabase } from \"../supabase/init\";\nimport { useRouter } from \"vue-router\";\n\nexport default {\n  name: \"register\",\n  setup() {\n    const router = useRouter();\n    const confirmPassword = ref(null);\n    const email = ref(null);\n    const password = ref(null);\n    const errorMsg = ref(null);\n\n    // Register function\n    const register = async () => {\n      if (password.value === confirmPassword.value) {\n        try {\n          const { error } = await supabase.auth.signUp({\n            email: email.value,\n            password: password.value,\n          });\n          if (error) throw error;\n          router.push({ name: \"Login\" });\n        } catch (error) {\n          errorMsg.value = error.message;\n          setTimeout(() => {\n            errorMsg.value = null;\n          }, 5000);\n        }\n        return;\n      }\n      errorMsg.value = \"Error: Passwords do not match\";\n      setTimeout(() => {\n        errorMsg.value = null;\n      }, 5000);\n    };\n    return { email, password, confirmPassword, errorMsg, register };\n  },\n};\n</script>"]}]}