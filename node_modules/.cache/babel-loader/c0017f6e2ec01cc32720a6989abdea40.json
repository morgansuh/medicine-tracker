{"remainingRequest":"/Users/morgansuh/med-schedules/node_modules/babel-loader/lib/index.js!/Users/morgansuh/med-schedules/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/morgansuh/med-schedules/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/morgansuh/med-schedules/src/App.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/morgansuh/med-schedules/src/App.vue","mtime":1650348105881},{"path":"/Users/morgansuh/med-schedules/node_modules/cache-loader/dist/cjs.js","mtime":1650339646262},{"path":"/Users/morgansuh/med-schedules/node_modules/babel-loader/lib/index.js","mtime":1650339646916},{"path":"/Users/morgansuh/med-schedules/node_modules/cache-loader/dist/cjs.js","mtime":1650339646262},{"path":"/Users/morgansuh/med-schedules/node_modules/vue-loader-v16/dist/index.js","mtime":1650339642675}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE5hdmlnYXRpb24gZnJvbSAiLi9jb21wb25lbnRzL05hdmlnYXRpb24udnVlIjsKaW1wb3J0IHsgcmVmIH0gZnJvbSAidnVlIjsKaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICIuL3N1cGFiYXNlL2luaXQiOwppbXBvcnQgc3RvcmUgZnJvbSAiLi9zdG9yZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBOYXZpZ2F0aW9uOiBOYXZpZ2F0aW9uCiAgfSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoKSB7CiAgICAvLyBDcmVhdGluZyBkYXRhIC8gdmFycwogICAgdmFyIGFwcFJlYWR5ID0gcmVmKG51bGwpOyAvLyBDaGVja2luZyB0byBzZWUgaWYgdXNlciBpcyBhbHJlYWR5IGxvZ2dlZCBpbgoKICAgIHZhciB1c2VyID0gc3VwYWJhc2UuYXV0aC51c2VyKCk7IC8vIElmIHVzZXIgZG9lcyBub3QgZXhpc3QsIG5lZWQgdG8gbWFrZSBhcHAgcmVhZHkKCiAgICBpZiAoIXVzZXIpIHsKICAgICAgYXBwUmVhZHkudmFsdWUgPSB0cnVlOwogICAgfSAvLyBSdW5zIHdoZW4gdGhlcmUgaXMgYSBhdXRoIHN0YXRlIGNoYW5nZQogICAgLy8gaWYgdXNlciBpcyBsb2dnZWQgaW4sIHRoaXMgd2lsbCBmaXJlCgoKICAgIHN1cGFiYXNlLmF1dGgub25BdXRoU3RhdGVDaGFuZ2UoZnVuY3Rpb24gKF8sIHNlc3Npb24pIHsKICAgICAgc3RvcmUubWV0aG9kcy5zZXRVc2VyKHNlc3Npb24pOwogICAgfSk7CiAgICByZXR1cm4gewogICAgICBhcHBSZWFkeTogYXBwUmVhZHkKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["/Users/morgansuh/med-schedules/src/App.vue"],"names":[],"mappings":"AAQA,OAAO,UAAP,MAAuB,6BAAvB;AACA,SAAS,GAAT,QAAoB,KAApB;AACA,SAAS,QAAT,QAAyB,iBAAzB;AACA,OAAO,KAAP,MAAkB,SAAlB;AAEA,eAAe;AACb,EAAA,UAAU,EAAE;AAAE,IAAA,UAAS,EAAT;AAAF,GADC;AAEb,EAAA,KAFa,mBAEL;AACN;AACA,QAAM,QAAO,GAAI,GAAG,CAAC,IAAD,CAApB,CAFM,CAGN;;AACA,QAAM,IAAG,GAAI,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAb,CAJM,CAMN;;AACA,QAAI,CAAC,IAAL,EAAW;AACT,MAAA,QAAQ,CAAC,KAAT,GAAiB,IAAjB;AACF,KATM,CAWN;AACA;;;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,iBAAd,CAAgC,UAAC,CAAD,EAAI,OAAJ,EAAgB;AAC9C,MAAA,KAAK,CAAC,OAAN,CAAc,OAAd,CAAsB,OAAtB;AACD,KAFD;AAGA,WAAO;AAAE,MAAA,QAAO,EAAP;AAAF,KAAP;AACD;AAnBY,CAAf","sourcesContent":["<template>\n  <div class=\"min-h-full font-Poppins box-border\">\n    <Navigation />\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport Navigation from \"./components/Navigation.vue\";\nimport { ref } from \"vue\";\nimport { supabase } from \"./supabase/init\";\nimport store from \"./store\";\n\nexport default {\n  components: { Navigation },\n  setup() {\n    // Creating data / vars\n    const appReady = ref(null);\n    // Checking to see if user is already logged in\n    const user = supabase.auth.user();\n\n    // If user does not exist, need to make app ready\n    if (!user) {\n      appReady.value = true;\n    }\n\n    // Runs when there is a auth state change\n    // if user is logged in, this will fire\n    supabase.auth.onAuthStateChange((_, session) => {\n      store.methods.setUser(session);\n    });\n    return { appReady };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700&display=swap\");\n</style>\n"],"sourceRoot":""}]}